{
  "global": {
    "db_type": "sql",
    "server_port": 3000
  },
  "db": {
    "name": "pixomaticdma",
    "host": "localhost",
    "user": "root",
    "password": "danira10",
    "tables": {
      "Company": {
        "fields": {
          "id": {
            "type": "int",
            "range": "255",
            "other properties": "auto_increment not_null"
          },
          "name": {
            "type": "varchar",
            "range": "100"
          },
          "cif": {
            "type": "char",
            "range": "9"
          },
          "shortdesc": {
            "type": "varchar",
            "range": "140"
          },
          "description": {
            "type": "mediumtext"
          },
          "email": {
            "type": "varchar",
            "range": "100"
          },
          "ccc": {
            "type": "varchar",
            "range": "100"
          },
          "date": {
            "type": "date"
          },
          "status": {
            "type": "boolean"
          },
          "logo": {
            "type": "mediumtext"
          },
          "token": {
            "type": "char",
            "range": "64"
          }
        },
        "unique_fields": "name cif token",
        "primary_key": "id",
        "routes": {
          "create": {
            "method": "post",
            "route": "/",
            "validation": {
              "name": {
                "where": "body",
                "text": "Invalid name",
                "check": ["exists", "not", "isEmpty", "trim"]
              },
              "description": {
                "where": "body",
                "text": "Invalid description",
                "check": ["exists", "not", "isEmpty", "trim"]
              },
              "email": {
                "where": "body",
                "text": "Invalid email",
                "check": ["exists", "not", "isEmpty", "trim", "isEmail", "normalizeEmail"]
              },
              "cif": {
                "where": "body",
                "text": "Invalid cif",
                "check": ["exists", "not", "isEmpty", "trim"],
                "custom": "/^[A-Z]\\d{8}$/"
              },
              "logo": {
                "where": "body",
                "text": "Invalid logo",
                "check": ["exists", "not", "isEmpty", "trim"]
              },
              "shortdesc": {
                "where": "body",
                "text": "Invalid shortdesc",
                "check": ["optional", "trim"]
              },
              "ccc": {
                "where": "body",
                "text": "Invalid ccc",
                "check": ["optional", "trim"]
              },
              "date": {
                "where": "body",
                "text": "Invalid date",
                "check": ["optional", "trim"]
              },
              "status": {
                "where": "body",
                "text": "Status is not a boolean",
                "check": ["optional", "isBoolean"]
              }
            }
          },
          "update": {
            "method": "put",
            "route": "/:id",
            "validation": {
              "id": {
                "where": ["param", "body"],
                "text": ["You must introduce a valid company id", "You cannot upload the id of a company"],
                "check": [["exists", "not", "isEmpty", "isInt"], ["not", "exists"]]
              },
              "name": {
                "where": "body",
                "text": "Invalid name",
                "check": ["optional", "not", "isEmpty", "trim"]
              },
              "description": {
                "where": "body",
                "text": "Invalid description",
                "check": ["optional", "not", "isEmpty", "trim"]
              },
              "email": {
                "where": "body",
                "text": "You cannot upload the email of a company",
                "check": ["not", "exists"]
              },
              "cif": {
                "where": "body",
                "text": "You cannot upload the cif of a company",
                "check": ["not", "exists"]
              },
              "logo": {
                "where": "body",
                "text": "Invalid logo",
                "check": ["optional", "not", "isEmpty", "trim"]
              },
              "shortdesc": {
                "where": "body",
                "text": "Invalid shortdesc",
                "check": ["optional", "not", "isEmpty", "trim"]
              },
              "ccc": {
                "where": "body",
                "text": "Invalid ccc",
                "check": ["optional", "not", "isEmpty", "trim"]
              },
              "date": {
                "where": "body",
                "text": "You cannot upload the date of a company",
                "check": ["not", "exists"]
              },
              "status": {
                "mode": "overwrite",
                "where": "body",
                "text": "Status is not a boolean",
                "check": ["optional", "isBoolean"]
              }
            }
          }
        }
      },
      "Favorite": {
        "fields": {
          "id": {
            "type": "int",
            "range": "255",
            "other properties": "auto_increment not_null"
          },
          "ownerId": {
            "type": "int",
            "range": "255",
            "other properties": "not_null"
          },
          "companyId": {
            "type": "int",
            "range": "255"
          }
        },
        "primary_key": "id",
        "foreign_key": "companyId references Companies id",
        "routes": {
          "create": {
            "method": "post",
            "route": "/",
            "validation": {
              "ownerId": {
                "where": "body",
                "text": "OwnerId is needed an has to be an integer",
                "check": ["exists", "isInt"]
              },
              "companyId": {
                "where": "body",
                "text": "CompanyId is needed an has to be an integer",
                "check": ["exists", "isInt"]
              }
            }
          }
        }
      }
    }
  }
}